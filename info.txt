https://computing.llnl.gov/tutorials/parallel_comp/
https://computing.llnl.gov/tutorials/pthreads/
https://timmurphy.org/2010/05/04/pthreads-in-c-a-minimal-working-example/
http://greenteapress.com/thinkos/html/thinkos012.html
https://timmurphy.org/2014/04/26/using-fork-in-cc-a-minimum-working-example/
https://stackoverflow.com/questions/876605/multiple-child-process
https://stackoverflow.com/questions/9537068/sem-close-vs-sem-unlink-when-process-terminates


https://www.cs.cmu.edu/afs/cs/academic/class/15492-f07/www/pthreads.html

functions:
memset, printf, malloc, free, write,
usleep, gettimeofday, pthread_create,
pthread_detach, pthread_join, pthread_mutex_init,
pthread_mutex_destroy, pthread_mutex_lock,
pthread_mutex_unlock


int gettimeofday(struct timeval *restrict tv, struct timezone *_Nullable restrict tz);
struct timeval {
   time_t      tv_sec;     /* seconds */
   suseconds_t tv_usec;    /* microseconds */
};
struct timezone {
   int tz_minuteswest;     /* minutes west of Greenwich */
   int tz_dsttime;         /* type of DST correction */
};
#include <sys/time.h>
NOTE: The use of the timezone structure is obsolete; the tz argument
should normally be specified as NULL.

Arguments:
Your(s) program(s) should take the following arguments:
number_of_philosophers time_to_die time_to_eat time_to_sleep
[number_of_times_each_philosopher_must_eat]
◦ number_of_philosophers: The number of philosophers and also the number
of forks.
◦ time_to_die (in milliseconds): If a philosopher didn’t start eating time_to_die
milliseconds since the beginning of their last meal or the beginning of the sim-
ulation, they die.
◦ time_to_eat (in milliseconds): The time it takes for a philosopher to eat.
During that time, they will need to hold two forks.
◦ time_to_sleep (in milliseconds): The time a philosopher will spend sleeping.
◦ number_of_times_each_philosopher_must_eat (optional argument): If all
philosophers have eaten at least number_of_times_each_philosopher_must_eat
times, the simulation stops. If not specified, the simulation stops when a
philosopher dies.

Output:
About the logs of your program:
• Any state change of a philosopher must be formatted as follows:
◦ timestamp_in_ms X has taken a fork
◦ timestamp_in_ms X is eating
◦ timestamp_in_ms X is sleeping
◦ timestamp_in_ms X is thinking
◦ timestamp_in_ms X died



 Use --history-level=approx or =none to gain increased speed, at
==31316== the cost of reduced accuracy of conflicting-access information
==31316== For lists of detected and suppressed errors, rerun with: -s
==31316== ERROR SUMMARY: 3688 errors from 43 contexts (suppressed: 9381 from 213


Use --history-level=approx or =none to gain increased speed, at
==31472== the cost of reduced accuracy of conflicting-access information
==31472== For lists of detected and suppressed errors, rerun with: -s
==31472== ERROR SUMMARY: 3110 errors from 40 contexts (suppressed: 7554 from 202